@model PaginatedList<Alfa_1.Models.Report>

@{
    ViewData["Title"] = "Index";
}

<h2>Index</h2>

<p>
    <a asp-action="Create">Create New</a>
</p>


<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find: <input type="text" name="SearchString" value="@ViewData["currentFilter"]" />
            <input type="submit" value="Search" class="btn btn-default" /> 
        </p>
    </div>
</form>
@*<hr />*@
<table class="table">
    <thead>
        <tr>
            <th>
                Email
            </th>
                <th>
                    Name
                </th>
                <th>
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["CompleteSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Completed</a>
                </th>
                <th>
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["DateSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Created</a>
                </th>
                <th>
                    Latitude
                </th>
                <th>
                    Longitude
                </th>
                <th>
                   Category
                </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.User.Email)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            @*<td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>*@
            @*<td>
                @Html.DisplayFor(modelItem => item.Img)
            </td>*@
            <td>
                @Html.DisplayFor(modelItem => item.IsComplete)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Created)
            </td>
            @*<td>
                @Html.DisplayFor(modelItem => item.Close)
            </td>*@
            <td>
                @Html.DisplayFor(modelItem => item.Latitude)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Longitude)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Category.Name)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-page="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-page="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>
